// ============================================================================
//
// Copyright (c) 2006-2014, Talend Inc.
//
// This source code has been automatically generated by_Talend Data Fabric
// CodeGenerator version 6.4.1.20170623_1246
// You can find more information about Talend products at www.talend.com.
// You may distribute this code under the terms of the GNU LGPL license
// http://www.gnu.org/licenses/lgpl.html).
//
// ============================================================================
package routines;

import java.util.Random;

public class TalendDataGeneratorGerman {

   
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getVorname() # Steffen.
     */
    public static String getVorname() {
        String[] list = { "Mia", "Emma", "Hannah", "Sofia", "Anna", "Emilia", "Lina", "Marie", "Lena", "Mila", "Emily", "Lea", 
        		"Leonie", "Amelie", "Sophie", "Johanna", "Luisa", "Clara", "Lilly", "Laura", "Nele", "Lara", "Charlotte", "Leni", 
        		"Maja", "Frieda", "Mathilda", "Ida", "Ella", "Pia", "Sarah", "Lia", "Lotta", "Greta", "Melina", "Julia", "Paula", 
        		"Lisa", "Marlene", "Zoe", "Alina", "Victoria", "Mira", "Elisa", "Isabella", "Helena", "Josephine", "Mara", 
        		"Isabell", "Nora", "Ben", "Jonas", "Leon", "Elias", "Finn", "Noah", "Paul", "Luis", "Lukas", "Luca", "Felix", 
        		"Maximilian", "Henry", "Max", "Emil", "Moritz", "Jakob", "Niklas", "Tim", "Julian", "Oskar", "Anton", "Philipp", 
        		"David", "Liam", "Alexander", "Theo", "Tom", "Mats", "Jan", "Matteo", "Samuel", "Erik", "Fabian", "Milan", "Leo", 
        		"Jonathan", "Rafael", "Simon", "Vincent", "Lennard", "Carl", "Linus", "Hannes", "Jona", "Mika", "Jannik", "Nico", 
        		"Till", "Johannes" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }

    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getNachname() # Bischoff.
     */
    public static String getNachname() {
        String[] list = { "Müller", "Schmidt", "Schneider", "Fischer", "Weber", "Meyer", "Wagner", "Becker", "Schulz", "Hoffmann", 
        		"Schäfer", "Koch", "Bauer", "Richter", "Klein", "Wolf", "Schröder", "Schneider", "Neumann", "Schwarz", "Zimmermann", 
        		"Braun", "Krüger", "Hofmann", "Hartmann", "Lange", "Schmitt", "Werner", "Schmitz", "Krause", "Meier", "Lehmann", 
        		"Schmid", "Schulze", "Maier", "Köhler", "Herrmann", "König", "Walter", "Mayer", "Huber", "Kaiser", "Fuchs", "Peters", 
        		"Lang", "Scholz", "Möller", "Weiß", "Jung", "Hahn", "Schubert", "Vogel", "Friedrich", "Keller", "Günther", "Frank", 
        		"Berger", "Winkler", "Roth", "Beck", "Lorenz", "Baumann", "Franke", "Albrecht", "Schuster", "Simon", "Ludwig", "Böhm", 
        		"Winter", "Kraus", "Martin", "Schumacher", "Krämer", "Vogt", "Stein", "Jäger", "Otto", "Sommer", "Groß", "Seidel", 
        		"Heinrich", "Brandt", "Haas", "Schreiber", "Graf", "Schulte", "Dietrich", "Ziegler", "Kuhn", "Kühn", "Pohl", "Engel", 
        		"Horn", "Busch", "Bergmann", "Thomas", "Voigt", "Sauer", "Arnold", "Wolff", "Pfeiffer" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }

    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getStrasse() # Servatiusstr.
     */
    public static String getStrasse() {
        String[] list = { "Hauptstraße", "Schulstraße", "Gartenstraße", "Bahnhofstraße", "Dorfstraße", "Bergstraße", "Birkenweg", 
        		"Lindenstraße", "Kirchstraße", "Waldstraße", "Ringstraße", "Schillerstraße", "Amselweg", "Goethestraße", "Wiesenweg", 
        		"Buchenweg", "Jahnstraße", "Wiesenstraße", "Ahornweg", "Finkenweg", "Eichenweg", "Am Sportplatz", "Feldstraße", 
        		"Mühlenweg", "Rosenstraße", "Erlenweg", "Friedhofstraße", "Blumenstraße", "Lindenweg", "Tannenweg", "Brunnenstraße", 
        		"Kirchweg", "Bachstraße", "Raiffeisenstraße", "Mozartstraße", "Rosenweg", "Lerchenweg", "Drosselweg", "Mühlenstraße", 
        		"Talstraße", "Gartenweg", "Industriestraße", "Mittelstraße", "Beethovenstraße", "Poststraße", "Waldweg", "Kirchplatz", 
        		"Meisenweg", "Fliederweg", "Kirchgasse", "Am Bahnhof", "Breslauer Straße", "Lessingstraße", "Schloßstraße", 
        		"Kiefernweg", "Fasanenweg", "Burgstraße", "Neue Straße", "Birkenstraße", "Uhlandstraße", "Kastanienweg", 
        		"Königsberger Straße", "Tulpenweg", "Schulweg", "Im Winkel", "Mühlweg", "Marktplatz", "Parkstraße", "Danziger Straße", 
        		"Grüner Weg", "Kapellenweg", "Schützenstraße", "Berliner Straße", "Mittelweg", "Römerstraße", "Eschenweg", "Heideweg", 
        		"Nelkenweg", "Fichtenweg", "Am Anger", "Ulmenweg", "Stettiner Straße", "Wilhelmstraße", "Lärchenweg", "Sonnenstraße", 
        		"Schubertstraße", "Friedrichstraße", "Eichendorffstraße", "Am Hang", "Sudetenstraße", "Marienstraße", "Friedhofsweg", 
        		"Marktstraße", "Kurze Straße", "Brückenstraße", "Eichenstraße", "Schwalbenweg", "Ginsterweg", "Neuer Weg", "Lange Straße" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }

    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getStadt() # Bonn.
     */
    public static String getStadt() {
        String[] list = { "Berlin", "Hamburg", "München", "Köln", "Frankfurt am Main", "Stuttgart", "Düsseldorf", "Dortmund", 
        		"Essen", "Leipzig", "Bremen", "Dresden", "Hannover", "Nürnberg", "Duisburg", "Bochum", "Wuppertal", "Bielefeld", 
        		"Bonn", "Münster", "Karlsruhe", "Mannheim", "Augsburg", "Wiesbaden", "Gelsenkirchen", "Mönchengladbach", 
        		"Braunschweig", "Chemnitz", "Kiel", "Aachen", "Halle (Saale)", "Magdeburg", "Freiburg im Breisgau", "Krefeld", 
        		"Lübeck", "Oberhausen", "Erfurt", "Mainz", "Rostock", "Kassel", "Hagen", "Hamm", "Saarbrücken", 
        		"Mülheim an der Ruhr", "Potsdam", "Ludwigshafen am Rhein", "Oldenburg", "Leverkusen", "Osnabrück", 
        		"Solingen", "Heidelberg", "Herne", "Neuss", "Darmstadt", "Paderborn", "Regensburg", "Ingolstadt", "Würzburg", 
        		"Fürth", "Wolfsburg", "Offenbach am Main", "Ulm", "Heilbronn", "Pforzheim", "Göttingen", "Bottrop", "Trier", 
        		"Recklinghausen", "Reutlingen", "Bremerhaven", "Koblenz", "Bergisch Gladbach", "Jena", "Remscheid", "Erlangen", 
        		"Moers", "Siegen", "Hildesheim", "Salzgitter" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }

    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getBundesland() # Rheinland-Pfalz.
     */
    public static String getBundesland() {
        String[] list = { "Baden-Württemberg", "Bayern", "Berlin ", "Brandenburg", "Bremen ", "Hamburg ", "Hessen", 
        		"Mecklenburg-Vorpommern", "Niedersachsen", "Nordrhein-Westfalen", "Rheinland-Pfalz", "Saarland", "Sachsen", 
        		"Sachsen-Anhalt", "Schleswig-Holstein", "Thüringen" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }

    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getBundeslandKuerzel() # RLP.
     */
    public static String getBundeslandKuerzel() {
        String[] list = { "BW", "BY", "BE", "BB", "HB", "HH", "HE", "MV", "NI", "NW", "RP", "SL", "SN", "ST", "SH", "TH" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getFirma() # BASF.
     */
    public static String getFirma() {
        String[] list = { "Volkswagen AG", "Daimler AG", "E.ON SE", "BMW AG", "Schwarz Beteiligungs GmbH", "Siemens AG", 
        		"Robert Bosch GmbH", "BASF SE", "Deutsche Telekom AG", "Deutsche Post DHL Group", "Metro AG", 
        		"Lidl Stiftung & Co. KG", "Audi AG", "RWE AG", "BP Europa SE", "Edeka Zentrale AG & Co. KG", "Rewe Group", 
        		"Bayer AG", "thyssenkrupp AG", "Deutsche Bahn AG", "Aldi Süd", "Continental AG", 
        		"Metro Cash & Carry International GmbH", "Deutsche Lufthansa AG", "Shell Deutschland Oil GmbH", 
        		"Aldi Nord", "Fresenius SE & Co. KGaA", "Celesio AG", "Hochtief AG", "Phoenix Pharmahandel GmbH & Co. KG", 
        		"Telekom Deutschland GmbH", "EnBW Energie Baden-Württemberg AG", "Media-Saturn-Holding GmbH", 
        		"Kaufland Stiftung & Co. KG", "Alstom Power AG", "Bayer Health Care AG", "TUI AG", "ZF Friedrichshafen AG", 
        		"SAP AG", "Ford-Werke GmbH", "Dr. Ing. h.c. F. Porsche AG", "Linde AG", "Bertelsmann SE", "Henkel AG & Co. KGaA", 
        		"Daimler Financial Services AG", "Heraeus Holding GmbH", "Baywa AG", "Wintershall Holding GmbH", "Schenker AG", 
        		"Tennet TSO GmbH", "Vattenfall GmbH", "Adidas AG", "MAN SE", "Marquard & Bahls AG", 
        		"Boehringer Ingelheim Pharma GmbH & Co. KG", "Fresenius Medical Care AG & Co. KGaA", "Evonik Industries AG", 
        		"Total Mineralöl und Chemie GmbH", "Lufthansa Air Plus Servicekarten GmbH", "HeidelbergCement AG", 
        		"RWE Vertrieb AG", "Schaeffler AG", "Exxon Mobil Central Europe Holding GmbH", "Otto GmbH & Co. KG", 
        		"Netto Marken-Discount AG & Co. KG", "Lekkerland AG & Co. KG", "Adam Opel AG", "ADM Germany GmbH", "Covestro AG", 
        		"BSH Hausgeräte GmbH", "Aurubis AG", "Merck KGaA", "Amprion GmbH", "Dr. August Oetker KG", "Penny-Markt GmbH", 
        		"Würth-Gruppe", "Brenntag AG", "GE Deutschland Holding GmbH", "VNG-Verbundnetz Gas AG", "Mahle GmbH", "Helm AG", 
        		"maxingvest AG", "Bayer Crop Science AG", "Salzgitter AG", "Vodafone GmbH", "DB Regio AG", "T-Systems International GmbH", 
        		"Airbus Operations GmbH", "Real-SB-Warenhaus GmbH", "Droege International Group AG", 
        		"dm-drogerie markt GmbH & Co. KG", "EWE AG", "50Hertz Transmission GmbH", "Jet Tankstellen Deutschland GmbH", 
        		"Lanxess AG", "Unternehmensgruppe Tengelmann", "Bilfinger SE", "Total Raffinerie Mitteldeutschland GmbH", 
        		"Edeka Minden eG", "Agravis Raiffeisen AG" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getAbteilung() # EDV.
     */
    public static String getAbteilung() {
        String[] list = { "Geschäftsführung", "Management", "Personalabteilung", "Human Resources", "Buchhaltung", "Rechnungswesen", 
        		"Finanzen", "Rechtsabteilung", "Legal Department", "Forschung & Entwicklung", "Fertigung", "Produktion", 
        		"Qualitätssicherung", "Arbeitssicherheit", "Öffentlichkeitsarbeit", "Marketing", "IT", 
        		"Hardwareadministration und Technik", "Verkauf", "Vertrieb", "Logistik", "Materialwirtschaft", "Poststelle", 
        		"Kundenbetreuung", "Call Center", "Hausverwaltung", "Einkauf", "Aufsichtsrat", "Geschäftsleitung", "Vorstand", 
        		"Montage", "Lagerhalle", "Versandabteilung", "Marktforschung", "Werbung", "Außendienst", "Bestellungen", 
        		"Kundenberatung", "Kundendienst", "Personalbeschaffung", "Aus- und Weiterbildung", "Gehälter und Pensionen", 
        		"Controlling", "Verwaltung", "Empfang", "Telefonzentrale", "Materialbeschaffung", "Gebäudeverwaltung", 
        		"Betriebsschutz", "EDV", "Fuhrpark", "Kantine", "Betriebsrat" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getIpAdresse # 10.12.201.9.
     */
    public static String getIpAdresse() {
    	Random r = new Random();
    	return r.nextInt(256) + "." + r.nextInt(256) + "." + r.nextInt(256) + "." + r.nextInt(256);
    }
      
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getMACAdresse # .
     */
    public static String getMACAdresse() {
        Random rand = new Random();
        byte[] macAddr = new byte[6];
        rand.nextBytes(macAddr);

        macAddr[0] = (byte)(macAddr[0] & (byte)254);  //zeroing last 2 bytes to make it unicast and locally adminstrated

        StringBuilder sb = new StringBuilder(18);
        for(byte b : macAddr){

            if(sb.length() > 0)
                sb.append(":");

            sb.append(String.format("%02x", b));
        }

        return sb.toString();
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getFarbe() # rot.
     */
    public static String getFarbe() {
        String[] list = { "Aliceblau", "Antikweiß", "Aquamarin", "Azur", "Beige", "Bisquit", "Schwarz", "Mandelweiß", "Blau", 
        		"Blauviolett", "Braun", "Burlywood", "Kadettenblau", "Likörgrün", "Schokolade", "Korallenrot", "Kornblumenblau", 
        		"Kornseide", "Cyan", "Dunkelblau", "Dunkelcyan", "Dunkel-Goldrute", "Dunkelgrau", "Dunkelgrün", "Dunkelkhaki", 
        		"Dunkelmagenta", "Dunkelolivgrün", "Dunkelorange", "Dunkel-Orchidee", "Dunkelrot", "Dunkel-Lachsrosa", 
        		"Dunkel-Seegrün", "Dunkel-Schieferblau", "Dunkel-Schiefergrau", "Dunkeltürkis", "Dunkelviolett", "Dunkelrosa", 
        		"Dunkelhimmelblau", "Blaßgrau", "Persenningblau", "Schamottestein", "Blütenweiß", "Waldgrün", "Gainsboro", 
        		"Geisterweiß", "Gold", "Goldrute", "Grau", "Grün", "Grüngelb", "Honigtau", "Knallrosa", "Indischrot", "Elfenbein", 
        		"Khaki", "Lavendel", "Lavendelhauch", "Grasgrün", "Zitronenchiffon", "Hellblau", "Hellkorall", "Hellcyan", 
        		"Hellgoldrute", "Hellgoldrutengelb", "Hellgrau", "Hellgrün", "Hellrosa", "Hellmeergrün", "Hellhimmelblau", 
        		"Hellschieferblau", "Hellschiefergrau", "Hellstahlblau", "Hellgelb", "Limonengrün", "Leinen", "Magenta", 
        		"Mittelaquamarinblau", "Mittelblau", "Mittelorchidee", "Mittellila", "Mittelseegrün", "Mittelschieferblau", 
        		"Mittelfrühlingsgrün", "Mitteltürkis", "Mittelviolettrot", "Mitternachtsblau", "Pfefferminzcreme", "Blaßrose", 
        		"Mokassin", "Navajo-Weiß", "Navy", "Navyblau", "Alte Spitze", "Olivegrau", "Orange", "Orangerot", "Orchidee", 
        		"Blaß-Goldrute", "Blaßgrün", "Blaßtürkis", "Blaßviolettrot", "Papaya-Creme", "Pfirsich", "Peru", "Rosa", 
        		"Pflaume", "Pulverblau", "Lila", "Rot", "Rosigbraun", "Königsblau", "Sattelbraun", "Lachsrosa", "Sandbraun", 
        		"Meergrün", "Muschelweiß", "Sienna", "Himmelblau", "Schieferblau", "Schiefergrau", "Schneeweiß", "Frühlingsgrün", 
        		"Stahlblau", "Hautfarben", "Distel", "Tomate", "Türkis", "Violett", "Violettrot", "Weizen", "Weiß", "Rauch", 
        		"gelb", "gelbgrün" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getWaehrung() # Euro.
     */
    public static String getWaehrung () {
        String[] list = { "VAE Dirham", "Afghani", "Ägyptisches Pfund", "Euro", "Lek", "Algerischer Dinar", "US-Dollar", 
        		"Kwanza", "Ostkaribischer Dollar", "CFA-Franc BEAC", "Argentinischer Peso", "Dram", "Aruba-Florin", 
        		"Aserbaidschan-Manat", "Birr", "Australischer Dollar", "Bahama-Dollar", "Bahrain-Dinar", "Taka", "Dollar", 
        		"Weißrussischer Rubel", "Belize-Dollar", "CFA-Franc BCEAO", "Bermuda-Dollar", "Ngultrum", "Boliviano", 
        		"Konvertible Mark", "Pula", "Brasilianischer Real", "Brunei-Dollar", "Lew", "Burundi-Franc", "Kap-Verde-Escudo", 
        		"Chilenischer Peso", "Renminbi Yuan", "Neuseeland-Dollar", "Costa-Rica Colón", "Antillen-Gulden", "Dänische Krone", 
        		"Dominikanischer Peso", "Dschibuti-Franc", "VAE Dirham", "US-Dollar", "Nakfa", "Falkland-Pfund", "Färöische Krone", 
        		"Fidschi-Dollar", "CFP-Franc", "Dalasi", "Neuer Schekel", "Lari", "Ghanaischer Cedi", "Gibraltar -Pfund", 
        		"Pfund Sterling", "Quetzal", "Guernsey-Pfund", "Guinea-Franc", "Guyana-Dollar", "Gourde", "Lempira", "Hongkong-Dollar", 
        		"Indische Rupie", "Indonesische Rupiah", "Isle-of-Man-Pfund", "Irakischer Dinar", "Iranischer Rial", "Isländische Krone", 
        		"Jamaikanischer Dollar", "Yen", "Jemen-Rial", "Jersey-Pfund", "Jordanischer Dinar", "Kaiman-Dollar", "Riel", 
        		"Kanadischer Dollar", "Tenge", "Katar-Riyal", "Kenia-Schilling", "Som", "Kolumbianischer Peso", "Komoren-Franc", 
        		"Kongo-Franc", "Nordkoreanischer Won", "Südkoreanischer Won", "Kuna", "Kubanischer Peso", "Peso concertible", 
        		"Kuwait-Dinar", "Kip", "Loti", "Libanesisches Pfund", "Liberianischer Dollar", "Libyscher Dinar", "Schweizer Franken", 
        		"Pataca", "Ariary", "Malawi-Kwacha", "Ringgit", "Rufiyaa", "Marokkanischer Dirham", "Ouguiya", "Mauritius-Rupie", 
        		"Mazedonischer Denar", "Mexikanischer Peso", "Moldawischer Leu", "Tögrög", "Metical", "Kyat", "Namibischer Dollar", 
        		"Nepalesische Rupie", "Córdoba Oro", "Naira", "Neue Lira", "Norwegische Krone", "Omanischer Rial", "Pakistanische Rupie", 
        		"Balboa", "Kina", "Guarani", "Nuevo Sol", "Philippinischer Peso", "Zloty", "Ruanda-Franc", "Rumänischer Leu", 
        		"Russischer Rubel", "Salomonen-Dollar", "Sambischer Kwacha", "Tala", "Dobra", "Saudi-Rial", "Schwedische Krone", 
        		"Serbischer Dinar", "Seychellen-Rupie", "Leone", "Simbabwe-Dollar", "Singapur-Dollar", "Somalia-Schilling", 
        		"Sri Lanka-Rupie", "Rand", "Sudanesisches Pfund", "Südsudanesisches Pfund", "Suriname-Dollar", "Lilangeni", 
        		"Syrisches Pfund", "Somoni", "Taiwan-Dollar", "Tansania-Schilling", "Baht", "US-Dollar", "Pa'anga", 
        		"Trinidad und Tobago Dollar", "Tschechische Krone", "Tunesischer Dinar", "Turkmenistan-Manat", "Uganda-Schilling", 
        		"Hrywna", "Forint", "Uruguayischer Peso", "Soʻm", "Vatu", "Bolívar fuerte", "Dong", "Saharaui-Peseta" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getWaehrungsKuerzel() # EUR.
     */
    public static String getWaehrungsKuerzel () {
        String[] list = { "AED", "AFN", "EGP", "EUR", "ALL", "DZD", "USD", "AOA", "XCD", "XAF", "ARS", "AMD", "AWG", "AZN", 
        		"ETB", "AUD", "BSD", "BHD", "BDT", "BBD", "BYR", "BZD", "XOF", "BMD", "BTN", "BOB", "BAM", "BWP", "BRL", 
        		"BND", "BGN", "BIF", "CVE", "CLP", "CNY", "NZD", "CRC", "ANG", "DKK", "DOP", "DJF", "ERN", "FKP", "FJD", 
        		"XPF", "GMD", "ILS", "GEL", "GHS", "GIP", "GBP", "GTQ", "GNF", "GYD", "HTG", "HNL", "HKD", "IDR", "IQD", 
        		"IRR", "ISK", "JMD", "JPY", "YER", "JOD", "KYD", "KHR", "CAD", "KZT", "QAR", "KES", "KGS", "COP", "KMF", 
        		"CDF", "KPW", "KRW", "HRK", "CUP", "CUC", "KWD", "LAK", "LSL", "LBP", "LRD", "LYD", "CHF", "MOP", "MAG", 
        		"MWK", "MYR", "MVR", "MAD", "MRO", "MUR", "MKD", "MXN", "MDL", "MNT", "MZN", "MMK", "NAD", "NPR", "NIO", 
        		"NGN", "TRY", "NOK", "OMR", "PKR", "PAB", "PGK", "PYG", "PEN", "PHP", "PLN", "RWF", "RON", "RUB", "SBD", 
        		"ZMK", "WST", "STD", "SAR", "SEK", "RSD", "SCR", "SLL", "ZWD", "SGD", "SOS", "LKR", "ZAR", "SDG", "SSP", 
        		"SRD", "SZL", "SYP", "TJS", "TWD", "TZS", "THB", "TOP", "TTD", "CZK", "TND", "TMT", "UGX", "UAH", "HUF", 
        		"UYU", "UZS", "VUV", "VEF", "VND" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getGeschlecht() # männlich.
     */
    public static String getGeschlecht () {
        String[] list = { "männlich", "weiblich" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getJobTitel() # Kundenbegtreuer(in).
     */
    public static String getJobTitel () {
        String[] list = { "Kundenbetreuer(in)", "Buchhalter(in), Rechnungsprüfer(in)", "Verwaltungsdirektor(in), Geschäftsführer(in)", 
        		"Leiter(in) der Werbeabteilung", "Vertreter(in)", "Bereichsleiter(in), Gebietsleiter(in)", 
        		"Assistent(in), Mitarbeiter(in), Stellvertreter(in)", "Wirtschaftsprüfer(in), Rechnungsprüfer(in)", 
        		"Bankdirektor(in)", "Filialleiter(in), Zweigstellenleiter(in)", "Börsenmarkler(in), Markler(in), Broker(in)", 
        		"Unternehmensberater(in)", "kaufmanische(r) Direktor(in)", "Einkäufer(in)", "Vorsitzende(r), Präsident(in)", 
        		"Vorstandsvorsitzende(r)", "Aufsichtsratsvorsitzende(r)", "Hauptbuchhalter(in), Leiter(in) der Buchhaltung", 
        		"leitender Ingenieur(in)", "Hauptgeschäftsführer(in), Vorstandsvorsitzende(r)", "Leiter(in) der Finanzabteilung", 
        		"Staatsbedienstete(r), Beamte(r)", "Handelsvertreter(in)", "Berater(in)", "Werbetexter(in)", "Kundendienstleiter(in)", 
        		"Leiter(in) der EDV-Abteilung", "Abteilungsleiter(in), Referatsleiter(in)", "Konstrukteur(in)", 
        		"Leiter(in) der Entwicklungsabteilung", "Entwicklungsingenieur(in)", "Direktor(in), Leiter(in), Vorstandsmitglied", 
        		"Generaldirektor(in), Hauptgeschäftsführer(in)", "Leiter(in) der Finanzabteilung", 
        		"Marketingleiter(in), Leiter(in) der Marketingabteilung", "PR-Leiter(in), Leiter(in) Öffentlichkeitsarbeit", 
        		"Verkaufsleiter(in)", "Vertriebsleiter(in)", "Geschäftsbereichsleiter(in)", "Redakteur(in)", "Chefredakteur(in)", 
        		"Angestellte(r)", "Ingenieur(in)", "Leiter(in) der technischen Abteilung", "Leiter(in) der Exportabteilung", 
        		"Fabrikdirector(in), Werksleiter(in)", "Außendienstleiter(in)", "Leiter(in) der Finanzabteilung", 
        		"Generaldirektor(in), leitende(r) Direktor(in), Geschäftsführer(in)", "Personalleiter(in)", 
        		"Leiter(in) der Importabteilung", "Rechtsanwalt/Rechtsanwältin", "Dozent(in), Lekotr(in)", 
        		"Leiter(in) der Logistikabteilung", "geschäftsführende(r) Gesellschafter(in)", "Assistent(in) der Marketingabteilung", 
        		"Geschäftsstellenleiter(in)", "Bürokräfte", "Gesellschafter(in), Teilhaber(in), Partner(in)", 
        		"Sekretär(in) der Geschäftsleitung", "Vorstandsvorsitzende(r)", "Pressereferent(in), Pressesprecher(in)", 
        		"Direktor(in)", "Privatsekretär(in)", "Produktmanager(in)", "Fertigungsleiter(in), Produktionsleiter(in), Betriebsleiter(in)", 
        		"Programmierer(in)", "Projektleiter(in)", "Werbeleiter(in)", "Einkaufsleiter(in)", "Einkäufer(in)", 
        		"Bezirksleiter(in), Gebietsleiter(in)", "Leiter(in) der Forschungsabteilung", "Verkaufsleiter(in), Vertriebsleiter(in)", 
        		"Handelsvertreter(in), Verkäufer(in)", "Verkäufer(in)", "angelernte(r) Arbeiter(in)", "leitende(r) Mitarbeiter(in)", 
        		"Leiter(in) der Kundendienstabteilung", "Aktionär(in), Anteilseigner(in)", "Spediteur(in)", "Facharbeiter(in)", 
        		"Leiter(in) der EDV-Abteilung", "Teamleiter(in), Gruppenleiter(in)", "technische(r) Direktor(in)/Leiter(in)", 
        		"Finanzdirektor(in)", "ungelernte Arbeitskraft", "stellvertretende(r) Vorsitzende(r)/Direktor(in)" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getAnrede() # Frau.
     */
    public static String getAnrede () {
        String[] list = { "Herr", "Frau", "Doktor", "Professor", "Präsident", "Direktor", "Herzog", "Herzogin", "Graf" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getChemischesElement() # Actinium.
     */
    public static String getChemischesElement () {
        String[] list = { "Actinium", "Aluminium", "Americium", "Antimon (Stibium)", "Argon", "Arsen", "Astat", "Barium", 
        		"Berkelium", "Beryllium", "Bismut auch: Wismut", "Blei (Plumbum)", "Bohrium", "Bor", "Brom", "Cadmium", 
        		"Caesium", "Calcium", "Californium", "Cer", "Chlor", "Chrom", "Cobalt", "Copernicium", "Curium", "Darmstadtium", 
        		"Dubnium", "Dysprosium", "Einsteinium", "Eisen (Ferrum)", "Erbium", "Europium", "Fermium", "Flerovium", 
        		"Fluor", "Francium", "Gadolinium", "Gallium", "Germanium", "Gold (Aurum)", "Hafnium", "Hassium", "Helium", 
        		"Holmium", "Indium", "Iod", "Iridium", "Kalium", "Kohlenstoff (Carbonium)", "Krypton", "Kupfer (Cuprum)", 
        		"Lanthan", "Lawrencium", "Lithium", "Livermorium", "Lutetium", "Magnesium", "Mangan", "Meitnerium", 
        		"Mendelevium", "Molybdän", "Moscovium", "Natrium", "Neodym", "Neon", "Neptunium", "Nickel", "Nihonium", 
        		"Niob", "Nobelium", "Oganesson", "Osmium", "Palladium", "Phosphor3", "Platin", "Plutonium", "Polonium", 
        		"Praseodym", "Promethium", "Protactinium", "Quecksilber (Hydrargyrum)", "Radium", "Radon", "Rhenium", 
        		"Rhodium", "Roentgenium", "Rubidium", "Ruthenium", "Rutherfordium", "Samarium", "Sauerstoff (Oxygenium)", 
        		"Scandium", "Schwefel (Sulpur)", "Seaborgium", "Selen", "Silber (Argentum)", "Silicium", 
        		"Stickstoff (Nitrogenium)", "Strontium", "Tantal", "Technetium", "Tellur", "Tenness", "Terbium", "Thallium", 
        		"Thorium", "Thulium", "Titan", "Uran", "Vanadium", "Wasserstoff (Hydrogenium)", "Wolfram", "Xenon", 
        		"Ytterbium", "Yttrium", "Zink", "Zinn (Stannum)", "Zirconium" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
    /**
     * {talendTypes} String
     * 
     * {Category} TalendDataGeneratorGerman
     * 
     * {example} getRating() # AAAB.
     */
    public static String getRating () {
        String[] list = { "AAAA", "BBBB", "AAAB", "AABB", "ABBB", "BBBA", "BBAA", "BAAA" };
        Integer random = 0 + ((Long) Math.round(Math.random() * (list.length - 1 - 0))).intValue();
        return list[random];
    }
    
}
